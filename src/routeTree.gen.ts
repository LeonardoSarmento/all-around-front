/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthUsersIndexImport } from './routes/_auth/users/index'
import { Route as AuthUsersCreateImport } from './routes/_auth/users/create'
import { Route as AuthUsersUserIdImport } from './routes/_auth/users/$userId'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersIndexRoute = AuthUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersCreateRoute = AuthUsersCreateImport.update({
  id: '/users/create',
  path: '/users/create',
  getParentRoute: () => AuthRoute,
} as any)

const AuthUsersUserIdRoute = AuthUsersUserIdImport.update({
  id: '/users/$userId',
  path: '/users/$userId',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/$userId': {
      id: '/_auth/users/$userId'
      path: '/users/$userId'
      fullPath: '/users/$userId'
      preLoaderRoute: typeof AuthUsersUserIdImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/create': {
      id: '/_auth/users/create'
      path: '/users/create'
      fullPath: '/users/create'
      preLoaderRoute: typeof AuthUsersCreateImport
      parentRoute: typeof AuthImport
    }
    '/_auth/users/': {
      id: '/_auth/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthUsersIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthIndexRoute: typeof AuthIndexRoute
  AuthUsersUserIdRoute: typeof AuthUsersUserIdRoute
  AuthUsersCreateRoute: typeof AuthUsersCreateRoute
  AuthUsersIndexRoute: typeof AuthUsersIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthIndexRoute: AuthIndexRoute,
  AuthUsersUserIdRoute: AuthUsersUserIdRoute,
  AuthUsersCreateRoute: AuthUsersCreateRoute,
  AuthUsersIndexRoute: AuthUsersIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/': typeof AuthIndexRoute
  '/users/$userId': typeof AuthUsersUserIdRoute
  '/users/create': typeof AuthUsersCreateRoute
  '/users': typeof AuthUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthIndexRoute
  '/users/$userId': typeof AuthUsersUserIdRoute
  '/users/create': typeof AuthUsersCreateRoute
  '/users': typeof AuthUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/': typeof AuthIndexRoute
  '/_auth/users/$userId': typeof AuthUsersUserIdRoute
  '/_auth/users/create': typeof AuthUsersCreateRoute
  '/_auth/users/': typeof AuthUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/users/$userId' | '/users/create' | '/users'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/users/$userId' | '/users/create' | '/users'
  id:
    | '__root__'
    | '/_auth'
    | '/_auth/'
    | '/_auth/users/$userId'
    | '/_auth/users/create'
    | '/_auth/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/",
        "/_auth/users/$userId",
        "/_auth/users/create",
        "/_auth/users/"
      ]
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/$userId": {
      "filePath": "_auth/users/$userId.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/create": {
      "filePath": "_auth/users/create.tsx",
      "parent": "/_auth"
    },
    "/_auth/users/": {
      "filePath": "_auth/users/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
